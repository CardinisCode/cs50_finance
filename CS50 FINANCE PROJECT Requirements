CS50 FINANCE PROJECT

#1 [X]	Register
	[x]	Create registration form
		[x] Username
			[x]	Should be created as an entry field
			[x]	Name this field: username 
			
		[x]	password - entry field
			[x]	Should be created as an entry field
			[x]	Name this field: password 

		[x]	confirm password
			[x]	Should be created as an entry field
			[x]	Name this field: confirmation 

		[x]	Register button - Button

	[X]	Create a new template: register.htm
		-> Similar to login.html

	[X]	Submit the user’s input via POST to /register

	[X]	Verify user's details
		[x]	Make sure the username field isn't empty
			[x]	If so: provide error message

		[ ]	check username against DB
			[ ]	Provide error if Username already exists in the DB

		[x]	Make sure the password field isn't empty
			[x]	If empty: provide error message

		[x]	Make sure the password confirmation field isn't empty
			[x]	If empty: provide error message

		[x]	Make sure the password and password confirmation fields match
			[x]	If not: provide error message

	[X]	INSERT the new user into users (table)
		[X]	Store a hash of the user’s password 
			(Hash the user’s password with generate_password_hash)

	[X]	Should display form - when requested via GET

	[X]	Test the Login & logout functions
		[X]	Register a user successfully
		[X]	The user has been added to DB Successfully
		[X]	Log out user successfully (user gets redirected to the login page)

------------------------------------------------------------------------------

#2 [X]	Quote - it should allow a user to look up a stock’s current price.
	[X] Create the quote template (form) 
		[X]	Create a text field -> name: symbol.
		[X]	Create a button -> Submit 
		[X]	When the get request is called, the user should see the form

	[X]	Set up the route to accept both GET and POST methods

	[X]	Create the "quoted" template - this template will display results from lookup()

	[X]	POST 
		[X]	Call on lookup() with the value of "symbol" input field
		[X]	Save the results of this lookup() request into a variable
		[X] Catch the error if lookup() returns None
		[X]	Display the input to user -> to "quoted.html"

	
------------------------------------------------------------------------------

#3	[ ] Buy - Should allow user to buy stock of their choice
		[x]	Templates
			[X]	Create a "buy.html" template
			[X]	Create a "bought.html" template

		[X]	GET Request method (form)
			[X]	Create text field: symbol
			[X]	Create text field: shares
			[X]	Create button: Buy

		[X]	Create route for "buy.html" 
		[X] Create route for "bought.html" 

		[X]	POST request method (processing payment)
			[X]	save user input in variables
			[X]	create & save a lookup request using provided stock symbol
			[X]	Save users (unique) ID
			[X]	Save the stock's current price
			[X]	check the user's current balance (using SQL query)
			[X]	Calculate the total value of user's purchase
			[X]	Check if user can afford the purchase
			[X]	payment is done -> redirect user to "bought.html"
			[X]	display table of user's purchase/s
			[X]	Insert purchase details into new table
			[X]	Update user's balance (in user table)
			[X]	Grab the date of purchase
			[X]	Insert payment details into new table
			[X] If user has stocks of that type
				Insert the purchased stock into the user's portfolio
					[ ]	shares
					[ ]	symbol
					[ ] company name
			[X]	If user already stocks of that type:
				[X]	Update the amount of shares that user owns for that symbol

		[X] Catching Errors 
			[x]	symbol input field is blank
			[X]	shares input field is blank
			[X]	shares input field is not a positive integer
			[X]	user doesn't provide a valid stock symbol
			[X]	user cannot afford the quantity & type of stock requested


		[X]	Create a new table in finance.db to store user's purchases 'history'
			[X]	Columns: 
				[X]	Purchase ID - INTEGER (Incremental)
				[X]	User ID (from users)
				[X]	stock symbol (text)
				[X]	current price (of stock) - float
				[X]	Total purchase value - float
				[X]	Date of purchase - date
			[X]	CREATE UNIQUE INDEX (Purchase ID)

		[X]	Create a new table 'history' in finance.db to store users' stocks purchased overall 
			[X]	Columns: 
				[X]	ID - INTEGER (Incremental)
				[X]	User ID (from users) - INT
				[X]	company name - TEXT
				[X]	stock symbol (text) - INT
				[X]	shares (QTY) - INT
			[X]	CREATE UNIQUE INDEX (ID)

		[X]	Update the user's table when buying / selling stocks

------------------------------------------------------------------------------

#4	[ ] Display a HTML table on INDEX summarising the user's stocks
		(For the current user logged in)

		[X]	Grab info
			[X]	which stocks current user owns
			[X]	For each stock item, grab: 
				[X]	No. of shares for this stock
				[X]	Current price of this stock
					[X]	Look up current price using lookup()
			
			[X] Users current cash balance 
				[X]	SQL query into 'user' table
			

		[X]	Calculate: 
			[X]	Total value of each holding 
				(shares * price)
			[X]	Grand total 
				(stocks total value + cash)

		[X] Include in table: 
			[X]	which stocks the user owns
			[X]	No. of shares
			[X]	current price of each stock
			[X]	Total value of each holding 	
			[X] Users current cash balance 
			[X] Grand total
				
	[X]	Added a link for the Home page on the top nav bar
		[X]	Connected the link to "/"

------------------------------------------------------------------------------

#5 [ ]	Sell



#6 [ ]	History

#7 [ ]	Personal Touch
